apiVersion: v1
kind: Template
metadata:
  name: mattermost-template
  annotations:
    description: "Deploy mattermost"
    tags: "horizon, communication, slack, mattermost"
    iconClass: "mattermost"
labels:
  template: "mattermost-template"
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${DEPLOYMENT_NAME}
    name: ${DEPLOYMENT_NAME}
  spec:
    replicas: 1
    selector:
      app: ${DEPLOYMENT_NAME}
      deploymentconfig: ${DEPLOYMENT_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${DEPLOYMENT_NAME}
          template: "mattermost"
          deploymentconfig: ${DEPLOYMENT_NAME}
      spec:
        containers:
        - image: 'docker-registry.default.svc:5000/${NAMESPACE}/mattermost:${IMAGE_TAG}'
          imagePullPolicy: Always
          name: ${DEPLOYMENT_NAME}
          terminationMessagePath: /dev/termination-log
          env:
          - name: GF_AUTH_GENERIC_OAUTH_NAME
            value: "Horizon-Auth"
          volumeMounts:
            - name: mattermost-data-vol
              mountPath: /mm/mattermost/mattermost-data
        volumes:
        - name: mattermost-data-vol
          emptyDir: {}
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${DEPLOYMENT_NAME}
        from:
          kind: ImageStreamTag
          namespace: ${NAMESPACE}
          name: 'mattermost:${IMAGE_TAG}'
      type: ImageChange
      
- apiVersion: v1
  kind: Route
  metadata:
    name: ${DEPLOYMENT_NAME}
    labels:
      app: ${DEPLOYMENT_NAME}
  spec:
    host: ${DEPLOYMENT_NAME}.${OPENSHIFT_HOST}
    to:
      kind: Service
      name: ${DEPLOYMENT_NAME}
    tls:
      termination: edge
- apiVersion: v1
  kind: Service
  metadata:
    name: ${DEPLOYMENT_NAME}
    labels:
      app: ${DEPLOYMENT_NAME}
  spec:
    ports:
    - port: 8065
      protocol: TCP
      targetPort: 8065
    selector:
      app: ${DEPLOYMENT_NAME}
    sessionAffinity: None
    type: ClusterIP

parameters:
- name: OPENSHIFT_HOST
  description: OpenShift sub domain host name
  required: true
- name: DEPLOYMENT_NAME
  description: "Name of the deployment"
  required: true
  value: "mattermost"
- name: NAMESPACE
  description: "OpenShift project name from where the images should be taken from"
  required: true
  value: "oz"
- name: IMAGE_TAG
  description: "Image tag to be used for deployment"
  required: true
  value: "latest"